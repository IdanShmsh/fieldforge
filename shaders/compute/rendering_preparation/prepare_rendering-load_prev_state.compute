#pragma kernel Pass0

#define THREAD_GROUP_SIZE_X 64
#define THREAD_GROUP_SIZE_Y 1
#define THREAD_GROUP_SIZE_Z 1
#define THREAD_GROUP_SIZE (THREAD_GROUP_SIZE_X * THREAD_GROUP_SIZE_Y * THREAD_GROUP_SIZE_Z)

#define SPATIAL_DIMENSIONALITY 3

#include "../../../src/core/ops/simulation_data_ops.hlsl"

// This function is used to load the previous fermion field state at a given position and field index into the rendering buffers
void load_fermion_field(float3 position, uint field_index)
{
    uint lattice_buffer_index = SimulationDataOps::get_fermion_lattice_buffer_index(position, field_index);
    rend_fermions_lattice_buffer[lattice_buffer_index] = prev_fermions_lattice_buffer[lattice_buffer_index];
}

// This function is used to load the previous fermion field states at a given position into the rendering buffers
void load_fermion_fields(float3 position)
{
    for (uint field_index = 0; field_index < FERMION_FIELDS_COUNT; field_index++) load_fermion_field(position, field_index);
}

// This function is used to load the previous gauge field states at a given position into the rendering buffers
void load_gauge_fields(float3 position)
{
    uint lattice_buffer_index = SimulationDataOps::get_gauge_lattice_buffer_index(position);
    rend_gauge_potentials_lattice_buffer[lattice_buffer_index] = prev_gauge_potentials_lattice_buffer[lattice_buffer_index];
    rend_electric_strengths_lattice_buffer[lattice_buffer_index] = prev_electric_strengths_lattice_buffer[lattice_buffer_index];
    rend_magnetic_strengths_lattice_buffer[lattice_buffer_index] = prev_magnetic_strengths_lattice_buffer[lattice_buffer_index];
}

/// --------------------------------------------------------------------------------------------------------------
/// This compute-shader represents the entry point for an operation in FieldForge's configurable compute-pipeline.
/// --------------------------------------------------------------------------------------------------------------
/// This pipeline operation loads the previous state of the simulation into the rendering buffers.
[numthreads(THREAD_GROUP_SIZE_X, THREAD_GROUP_SIZE_Y, THREAD_GROUP_SIZE_Z)]
void Pass0(uint3 dispatch_thread_id : SV_DispatchThreadID)
{
    float3 position = float3(dispatch_thread_id);
    load_fermion_fields(position);
    load_gauge_fields(position);
}
