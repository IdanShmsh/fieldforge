#pragma kernel CSMain

#define THREAD_GROUP_SIZE_X 64
#define THREAD_GROUP_SIZE_Y 1
#define THREAD_GROUP_SIZE_Z 1
#define THREAD_GROUP_SIZE (THREAD_GROUP_SIZE_X * THREAD_GROUP_SIZE_Y * THREAD_GROUP_SIZE_Z)

#define SPATIAL_DIMENSIONALITY 3

#include "../../../src/core/ops/simulation_data_ops.hlsl"
#include "../../../src/core/math/fermion_field_state_math.hlsl"
#include "../../../src/core/math/gauge_symmetries_vector_pack_math.hlsl"

// This function is used to load the current fermion field state at a given position and field index into the rendering buffers
void load_fermion_field(float3 position, uint field_index, float weight)
{
    uint lattice_buffer_index = SimulationDataOps::get_fermion_lattice_buffer_index(position, field_index);
    FermionFieldStateMath::rscl_sum(rend_fermions_lattice_buffer[lattice_buffer_index], crnt_fermions_lattice_buffer[lattice_buffer_index], 1 - weight, weight, rend_fermions_lattice_buffer[lattice_buffer_index]);
}

// This function is used to load the current fermion field states at a given position into the rendering buffers
void load_fermion_fields(float3 position, float weight)
{
    for (uint field_index = 0; field_index < FERMION_FIELDS_COUNT; field_index++) load_fermion_field(position, field_index, weight);
}

// This function is used to load the current gauge field states at a given position into the rendering buffers
void load_gauge_fields(float3 position, float weight)
{
    uint lattice_buffer_index = SimulationDataOps::get_gauge_lattice_buffer_index(position);
    GaugeSymmetriesVectorPackMath::scl_sum(rend_gauge_potentials_lattice_buffer[lattice_buffer_index], crnt_gauge_potentials_lattice_buffer[lattice_buffer_index], 1 - weight, weight, rend_gauge_potentials_lattice_buffer[lattice_buffer_index]);
    GaugeSymmetriesVectorPackMath::scl_sum(rend_electric_strengths_lattice_buffer[lattice_buffer_index], crnt_electric_strengths_lattice_buffer[lattice_buffer_index], 1 - weight, weight, rend_electric_strengths_lattice_buffer[lattice_buffer_index]);
    GaugeSymmetriesVectorPackMath::scl_sum(rend_magnetic_strengths_lattice_buffer[lattice_buffer_index], crnt_magnetic_strengths_lattice_buffer[lattice_buffer_index], 1 - weight, weight, rend_magnetic_strengths_lattice_buffer[lattice_buffer_index]);
}

float weight;

/// --------------------------------------------------------------------------------------------------------------
/// This compute-shader represents the entry point for an operation in FieldForge's configurable compute-pipeline.
/// --------------------------------------------------------------------------------------------------------------
/// This pipeline operation loads the current state of the simulation into the rendering buffers.
[numthreads(THREAD_GROUP_SIZE_X, THREAD_GROUP_SIZE_Y, THREAD_GROUP_SIZE_Z)]
void CSMain(uint3 dispatch_thread_id : SV_DispatchThreadID)
{
    weight = weight ? weight : 0.5f;

    float3 position = float3(dispatch_thread_id);
    load_fermion_fields(position, weight);
    load_gauge_fields(position, weight);
}
