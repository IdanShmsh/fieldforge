#pragma kernel Pass0
#pragma kernel Pass1

#define THREAD_GROUP_SIZE_X 64
#define THREAD_GROUP_SIZE_Y 1
#define THREAD_GROUP_SIZE_Z 1
#define THREAD_GROUP_SIZE (THREAD_GROUP_SIZE_X * THREAD_GROUP_SIZE_Y * THREAD_GROUP_SIZE_Z)

#define SPATIAL_DIMENSIONALITY 3

#include "../../../src/dynamics/guardrails/passive_field_blurring.hlsl"

float standard_deviation;

/// --------------------------------------------------------------------------------------------------------------
/// This compute-shader represents the entry point for an operation in FieldForge's configurable compute-pipeline.
/// --------------------------------------------------------------------------------------------------------------
/// This pipeline operation applies local blurring, the same way everywhere and to all gauge potential fields in the
/// simulation, using a 3x3x3 gaussian kernel.
/// Properties:
/// â€¢ standard_deviation (float)
///   This parameter <standard_deviation> represents the standard deviation of the gaussian kernel used for blurring.
[numthreads(THREAD_GROUP_SIZE_X, THREAD_GROUP_SIZE_Y, THREAD_GROUP_SIZE_Z)]
void Pass0(uint3 dispatch_thread_id : SV_DispatchThreadID)
{
    standard_deviation = standard_deviation ? standard_deviation : 0.25f;

    float3 position = float3(dispatch_thread_id);
    Guardrails::PassiveFieldBlurring::blur_gauge_fields(position, standard_deviation, crnt_gauge_potentials_lattice_buffer, temp_gauge_lattice_buffer);
}

[numthreads(THREAD_GROUP_SIZE_X, THREAD_GROUP_SIZE_Y, THREAD_GROUP_SIZE_Z)]
void Pass1(uint3 dispatch_thread_id : SV_DispatchThreadID)
{
    float3 position = float3(dispatch_thread_id);
    SimulationDataOps::copy_buffer_information_at_position(position, temp_gauge_lattice_buffer, crnt_gauge_potentials_lattice_buffer);
}
